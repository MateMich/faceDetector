{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/bulb.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChane","event","setState","signInEmail","target","value","onPasswordChane","signInPassword","onSubmitSignIn","console","log","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","loadUser","this","htmlFor","href","title","React","Component","Register","onNameChane","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","outputs","regions","region_info","bounding_box","clarifaiFace","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d1a8caed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signout')}\r\n                    className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')}\r\n                    className='f3 link dim black underline pa3 pointer'>Sign in</p>\r\n                <p onClick={() => onRouteChange('register')}\r\n                    className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/bulb.cade1cbf.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './bulb.png';\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 250, width: 250 }} >\r\n                <div className=\"Tilt-inner pa3\"> <img style={{ paddingTop: '5px' }} alt='logo' src={brain} /> </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n           <p className='f3'>\r\n               { 'This Magic Brain will detect faces in your pictures. Give it a try.' }\r\n           </p>\r\n           <div className='center'>\r\n               <div className='form center pa4 br3 shadow-5'>\r\n\r\n               \r\n               <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n               <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n               onClick={onButtonSubmit}>Detect</button>\r\n           </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n{`${name}, your current entry count is...`}\r\n\r\n            </div>\r\n            <div className='white f1'>\r\n{entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\nconst FaceRecognition=({imageUrl, box})=>\r\n{\r\n    return (\r\n      <div className='center ma'>\r\n          <div className=\"absolute mt2\">\r\n<img id='inputimage' alt='' src={imageUrl} width=\"500px\" height=\"auto\"/>\r\n<div className='bounding-box'\r\n style={{top: box.topRow, right:box.rightCol, bottom:box.bottomRow, left:box.leftCol}}></div>\r\n</div>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChane = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChane = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        console.log(this.state);\r\n        fetch('https://rocky-brushlands-47629.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        }).then(response=>response.json()).then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <div>\r\n                <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\"\r\n                                        htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"email\" name=\"email-address\" id=\"email-address\"\r\n                                        onChange={this.onEmailChane}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"password\" name=\"password\" id=\"password\"\r\n                                        onChange={this.onPasswordChane}\r\n                                    />\r\n                                </div>\r\n\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input\r\n                                    onClick={this.onSubmitSignIn}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                    type=\"submit\" value=\"Sign in\" />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                                <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n\r\n                </article>\r\n                <div>Icons made by <a href=\"https://www.flaticon.com/authors/dinosoftlabs\" title=\"DinosoftLabs\">DinosoftLabs</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component\r\n{\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name:''\r\n        }\r\n    }\r\n\r\n    onNameChane = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    \r\n    onEmailChane = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onPasswordChane = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n      //  console.log(this.state);\r\n        fetch('https://rocky-brushlands-47629.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name:this.state.name\r\n            })\r\n        }).then(response=>response.json()).then(user => {\r\n            if (user.id ) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\nrender()\r\n{\r\n    const { onRouteChange}=this.props;\r\n    return (\r\n        <div>\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" name=\"email-address\" id=\"email-address\"\r\n                                onChange={this.onNameChane}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\" name=\"name\" id=\"name\"\r\n                                onChange={this.onEmailChane}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" name=\"password\" id=\"password\"\r\n                                onChange={this.onPasswordChane}\r\n                                />\r\n                            </div>\r\n\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\" value=\"Register\" />\r\n                        </div>                      \r\n                    </div>\r\n                </main>\r\n\r\n            </article>\r\n            <div>Icons made by <a href=\"https://www.flaticon.com/authors/dinosoftlabs\" title=\"DinosoftLabs\">DinosoftLabs</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n} \r\n    \r\n\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n};\n\n\nconst initialState =\n{\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user:\n  {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    console.log(data.outputs[0].data.regions[0].region_info.bounding_box);\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n\n  }\n\n\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    fetch('https://rocky-brushlands-47629.herokuapp.com/imageurl',\n      {\n        method: 'post',\n        headers: { 'content-Type': 'application/json' },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n        .then(response=>response.json())\n        .then(response => {\n          if (response) {\n            fetch('https://rocky-brushlands-47629.herokuapp.com/image',\n              {\n                method: 'put',\n                headers: { 'content-Type': 'application/json' },\n                body: JSON.stringify({\n                  id: this.state.user.id\n                })\n              }).then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }))\n              })\n              .catch(console.log);\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        }).catch(err => console.log(err));\n\n      }\n\n  onRouteChange = (route) => {\n        if (route === 'signout') {\n          this.setState(initialState);\n        }\n        else if (route === 'home') {\n          this.setState({ isSignedIn: true })\n        }\n\n        this.setState({ route: route });\n      }\n\n  render() {\n      const { isSignedIn, imageUrl, route, box } = this.state;\n      return(\n      <div className = \"App\" >\n        <Particles className='particles'\n          params={particlesOptions}\n\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' ?\n      <div>\n        <Logo />\n        <Rank\n          name={this.state.user.name}\n          entries={this.state.user.entries}\n        />\n        <ImageLinkForm onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit} />\n        <FaceRecognition box={box} imageUrl={imageUrl} />\n      </div>\n      :\n      (\n        route === 'signin' ?\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          :\n          <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      )\n\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}